#slides
  .slide.slide0
    .content
      h2 PNW Scala 2013
      h1.left Scala<br/>for<br/>Javascript<br/>Kiddies
      h1.right Javascript<br/>for<br/>Scala<br/>Nerds
      h2 Clint Tseng &bull; Socrata

  .slide.slide1
    .content
      h1
        | Nothing here is new.
        span.asterisk *
      p.asterisk * (I&apos;m pretty sure)

  .slide.slide2
    .content
      h1 Janus
      ul
        li Definition
        li Justification
        li Origins
        li Consequences
        li Difficulties

  .slide.slide3
    .content
      h1 Janus is a web application framework focused on the organization of interface code into resuable, manageable pieces.
      ul
        li Backbone.js
        li Angular
        li Batman
        li Meteor
        li &hellip;

  .slide.slide4
    .logo
      svg( width='800px' height='800px' viewBox='0 0 92 93' version='1.1' xmlns='http://www.w3.org/2000/svg' )
        g( stroke='none' fill='none' fill-rule='evenodd' )
          path( d='M46,93 C20.594936,93 0,72.405064 0,47 C0,21.594936 20.594936,1 46,1 C51.4597667,1 56.6973743,1.95119167 61.556167,3.69690668 L58.8668408,11.233666 C54.8486348,9.7878885 50.5163265,9 46,9 C25.013208,9 8,26.013208 8,47 C8,67.986792 25.013208,85 46,85 C66.986792,85 84,67.986792 84,47 C84,41.2799175 82.7361408,35.8550204 80.4724563,30.9893605 L87.664672,27.47929 C90.4458161,33.4050551 92,40.0210309 92,47 C92,72.405064 71.405064,93 46,93 Z M46,93' fill='#FFFFFF')
          path( d='M46,72 C59.8071,72 71,60.8071 71,47 C71,43.3255893 70.2072923,39.8363224 68.783598,36.6939607 L75.0779322,33.6220901 C76.953734,37.6925211 78,42.2240783 78,47 C78,64.673088 63.673088,79 46,79 C28.326912,79 14,64.673088 14,47 C14,29.326912 28.326912,15 46,15 C49.8086157,15 53.4618289,15.6653682 56.8498436,16.8862424 L54.4966754,23.4809286 C51.844103,22.5224723 48.9830655,22 46,22 C32.1929,22 21,33.1929 21,47 C21,60.8071 32.1929,72 46,72 Z M46,72' fill='#CCCCCC' )
          path( d='M46,58.921875 C52.5842608,58.921875 57.921875,53.5842608 57.921875,47 C57.921875,45.3834723 57.6001392,43.8420889 57.0172118,42.4363975 L63.3872146,39.3275978 C64.424117,41.6739689 65,44.2697332 65,47 C65,57.493396 56.493396,66 46,66 C35.506604,66 27,57.493396 27,47 C27,36.506604 35.506604,28 46,28 C48.2754558,28 50.457488,28.4000008 52.4796657,29.1335403 L50.1001978,35.8019307 C48.8217306,35.3336807 47.4407089,35.078125 46,35.078125 C39.4157392,35.078125 34.078125,40.4157392 34.078125,47 C34.078125,53.5842608 39.4157392,58.921875 46,58.921875 Z M46,58.921875' fill='#999999' )
          path( d='M55.2235296,37.2255025 L89.7927586,20.8635706 C89.7927586,20.8635706 87.5783575,16.1886963 80.0740001,9.29946184 C72.5696428,2.41022735 68.0178432,0.687918726 68.0178432,0.687918726 L55.2235296,37.2255025 Z M55.2235296,37.2255025' fill='#DE0000' )

    .content
      h1 Socrata
      h2 We use data and technology to improve informed governance.

      ul.tech
        li rojoma-json
          .sub JSON library with type-driven codecs
        li socrata-http
          .sub Awesome HTTP client/server library
        li soda server
          .sub Our open source data server
        li everything!
          .sub All our new backend projects!

      ul.reasons
        li 508 compliance
          .sub Support for accesible users
        li SEO
          .sub Accounting for search engines

  .slide.slide5
    .content
      h1 Principles
      ul
        li Reusable code
          .sub Almost identical across envs
        li Componentized
          .sub Library of components to use and grow
        li Unit testable
          .sub Trivial to inject values, dependencies
        li Live bound
          .sub The framework should handle display state

  .slide.slide6
    .content
      h1 Influences
      ul
        li jQuery
          .sub Elegant, expressive solution to the DOM
        li Backbone
          .sub Preeminent application organization library
        li D3
          .sub Beautiful declarative+functional API
        li Scala?
          .sub Hadn't even crossed my mind

  .slide.slide7
    .content
      .code &lt;div class="person <span class="highlight class">new</span>"&gt;Person: <span class="highlight text">Martin Odersky</span>&lt;/div&gt;

  .slide.slide8
    .content
      .left
        h1 Backbone
        .code person.get('first_name')
        .code person.set('first_name', 'Lilia')
        hr
        .code person.on('change:first_name', &hellip;)

      .right
        h1 Janus
        .code person.get('name.first')
        .code person.set('name.first', 'Lilia')
        hr
        .code person.watch('name.first', (value) -&gt; value + '!')

  .slide.slide9
    .content
      .left
        h1 Template
        .code.
          &lt;div class="person"&gt;
           &lt;div class="name"&gt;&lt;/div&gt;
          &lt;/div&gt;
      .right
        h1 Bindings
        .code binding.find('.firstName').text()<br/>.from('name.first')<br/>.and('name.last')<br/><span class="highlight flatMap">.flatMap(</span>(first, last) -&gt; 'Name: ' + first + ' ' + last)

  .slide.slide10
    .content
      h1 Varying
      .code.
        class Varying extends Base
         <span class="highlight constr">constructor:</span> (value) -&gt; &hellip;

         setValue: (value) -&gt; <span class="highlight setVal">&hellip;</span>
         on: (event, handler) -&gt; &hellip;
      .code.map &nbsp;&nbsp;<span class="highlight map">map:</span> (f) -&gt; &hellip;

      .monad
        h1 &hellip;is this a monad?
        ul
          li Put a thing in a box?
          li Take that thing and put it in another box?
          li Collapse some boxes together?
          li (who cares?)

  .slide.slide11
    .content
      svg( width='759px' height='479px' viewBox='0 0 759 479' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' )
        g( stroke='none' fill='none' fill-rule='evenodd' )
          path( d='M41.5,95.5 L177.5,240.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M71.5,384.5 L177.5,239.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M178.500001,238.499912 L193.5,65.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M344.5,94.499924 L453.5,49.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M176.485982,241.499999 L497.5,241.499999' stroke='#FFFFFF' stroke-width='3' )
          path( d='M497.5,238.5 L521.5,407.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M498.5,240.5 L637.5,111.5' stroke='#FFFFFF' stroke-width='3' )
          path( d='M634.5,114.5 L698.50006,309.5' stroke='#FFFFFF' stroke-width='3' )
          g( transform='translate(112.000000, 175.000000)' )
            path.model( d='M64,128 C99.3462257,128 128,99.3462257 128,64 C128,28.6537743 99.3462257,0 64,0 C28.6537743,0 0,28.6537743 0,64 C0,99.3462257 28.6537743,128 64,128 Z M64,128' fill='#FBA617' )
            text( fill='#000000' font-size='30' x='15' y='77' )
              tspan MODEL
          g( transform='translate(264.000000, 344.000000)' )
            path.library( d='M64,128 C99.3462257,128 128,99.3462257 128,64 C128,28.6537743 99.3462257,0 64,0 C28.6537743,0 0,28.6537743 0,64 C0,99.3462257 28.6537743,128 64,128 Z M64,128' fill='#5C2ADC' )
            text( fill='#000000' font-size='30' x='7' y='77' )
              tspan LIBRARY
          g( transform='translate(304.000000, 56.000000)' )
            path.store( d='M39.5,79 C61.3152487,79 79,61.3152487 79,39.5 C79,17.6847513 61.3152487,0 39.5,0 C17.6847513,0 0,17.6847513 0,39.5 C0,61.3152487 17.6847513,79 39.5,79 Z M39.5,79' fill='#FB1786' )
            text( fill='#000000' font-size='18.4090909' x='13' y='47' )
              tspan STORE
          g( transform='translate(411.000000, 7.000000)' )
            path.request( d='M39.5,79 C61.3152487,79 79,61.3152487 79,39.5 C79,17.6847513 61.3152487,0 39.5,0 C17.6847513,0 0,17.6847513 0,39.5 C0,61.3152487 17.6847513,79 39.5,79 Z M39.5,79' fill='#EC7FB4' )
            text( fill='#000000' font-size='16' x='6' y='46' )
              tspan REQUEST
          g( transform='translate(477.000000, 358.000000)' )
            path.viewModel( d='M45.5,91 C70.6289574,91 91,70.6289574 91,45.5 C91,20.3710426 70.6289574,0 45.5,0 C20.3710426,0 0,20.3710426 0,45.5 C0,70.6289574 20.3710426,91 45.5,91 Z M45.5,91' fill='#FBE500' )
            text( fill='#000000' font-size='14' x='12' y='51' )
              tspan VIEWMODEL
          g( transform='translate(434.000000, 175.000000)' )
            path.view( d='M64,128 C99.3462257,128 128,99.3462257 128,64 C128,28.6537743 99.3462257,0 64,0 C28.6537743,0 0,28.6537743 0,64 C0,99.3462257 28.6537743,128 64,128 Z M64,128' fill='#1266EF' )
            text( fill='#000000' font-size='30' x='30' y='77' )
              tspan VIEW
          g( transform='translate(581.000000, 58.000000)' )
            path.templater( d='M53.5,107 C83.0472356,107 107,83.0472356 107,53.5 C107,23.9527644 83.0472356,0 53.5,0 C23.9527644,0 0,23.9527644 0,53.5 C0,83.0472356 23.9527644,107 53.5,107 Z M53.5,107' fill='#E9521C' )
            text( fill='#000000' font-size='16.6666667' x='11' y='61' )
              tspan TEMPLATER
          g( transform='translate(645.000000, 250.000000)' )
            path.binder( d='M53.5,107 C83.0472356,107 107,83.0472356 107,53.5 C107,23.9527644 83.0472356,0 53.5,0 C23.9527644,0 0,23.9527644 0,53.5 C0,83.0472356 23.9527644,107 53.5,107 Z M53.5,107' fill='#19CF7F' )
            text( fill='#000000' font-size='24' x='13' y='62.5' )
              tspan BINDER
          g( transform='translate(7.000000, 321.000000)' )
            path.list( d='M64,128 C99.3462257,128 128,99.3462257 128,64 C128,28.6537743 99.3462257,0 64,0 C28.6537743,0 0,28.6537743 0,64 C0,99.3462257 28.6537743,128 64,128 Z M64,128' fill='#C000E1' )
            text( fill='#000000' font-size='30' x='35' y='77' )
              tspan LIST
          g( transform='translate(148.000000, 19.000000)' )
            path.attribute( d='M46,92 C71.4050997,92 92,71.4050997 92,46 C92,20.5949003 71.4050997,0 46,0 C20.5949003,0 0,20.5949003 0,46 C0,71.4050997 20.5949003,92 46,92 Z M46,92' fill='#18B89C' )
            text( fill='#000000' font-size='17' x='6' y='52' )
              tspan ATTRIBUTE
          g( transform='translate(11.000000, 65.000000)' )
            path.issue( d='M30,60 C46.5685433,60 60,46.5685433 60,30 C60,13.4314567 46.5685433,0 30,0 C13.4314567,0 0,13.4314567 0,30 C0,46.5685433 13.4314567,60 30,60 Z M30,60' fill='#79CF19' )
            text( fill='#000000' font-size='17' x='9' y='37' )
              tspan ISSUE

    ul.detail
      li Stores attribute bags representing model data.
      li Storage and management of collections of object.
      li Defines custom behaviour for specific model attributes.
      li Describes a validation error on a model attribute or object.
      li Manages the interaction between model and presentation.
      li Manages the bindings between model and markup.
      li Defines and executes a binding between model and markup.
      li Allows for the management of view state that isn't model data.
      li Represents a pending request to an asynchronous resource.
      li Executes the request and manages its state.
      li Stores and retrieves system classes.

    .codeList
      .code.
        class Person extends Model
         @bind('name.full')
           .from('name.first')
           .and('name.last')
           .flatMap((first, last) -&gt; first + ' ' + last)

         isOfAge: -&gt; this.watch('age').map((age) -&gt; age &gt;= 18)
      .code.
        class People extends List
         @modelClass: Person

         lastElement: -&gt; this.watchAt(-1)
      .code.
        class Person extends Model
         @attribute 'alive', class extends attribute.BooleanAttribute
           default: -&gt; true
           writeDefault: true
      .code.
        class Person extends Model
         @attribute 'age', class extends attribute.NumberAttribute
           issues: -&gt; new List([
             new Issue(
               active: -&gt; this.watchValue().map((age) -&gt; age &gt;= 0)
               severity: -&gt; 0
               message: -&gt; this.watchValue().map((age) -&gt; "The age #{age} is not valid because it is less than zero.")
             )
           ])
      .code.
        class PersonView extends DomView
         @templateClass: PersonTemplate
         _wireEvents: -&gt;
           dom = this.artifact()
           dom.find('a.delete').on 'click', (event) =&gt;
             event.preventDefault()
             this.subject.destroy()
      .code.
        class PersonTemplate extends Templater
         _dom: -&gt; $(markup)
         _binding: -&gt;
           binding = super()
           binding.find('.person').classed('ofAge').from('age').flatMap((age) -&gt; age &gt;= 21)
           binding.find('.name').text().from('name.full')
           binding.find('.friendList').render().from('friends')
      .code.
        &hellip;well, you just saw this.
      .code.
        class PersonModel extends ViewModel
         @attribute 'expanded', class extends attribute.BooleanAttribute
           default: -&gt; true

         @attribute 'person', class extends attribute.ModelAttribute
           model: Person
      .code.
        class FetchRequest extends HttpRequest
         path: -&gt; "/api/users/\#{this.options.id}.json"

        &hellip;

        class InitState extends RequestState
        class PendingState extends RequestState
         constructor: (@status) -&gt;
        class SuccessState extends RequestState
         constructor: (@result) -&gt;

        &hellip;

        succeeded = myRequest.watch((value) -&gt; value instanceof SuccessState)
      .code.
        class HttpStore extends Store
         _handle: -&gt;
           &hellip;imperative async code
           this.request.setValue(&hellip;result&hellip;)

        &hellip;

        request = new FetchRequest( id: 4747 )
        storeLibrary.get(request).handle()
      .code.
        library = new Library()
        library.register(Model, GeneralModelEditView, context: 'edit')
        library.get(person, context: 'edit') &hellip;yields GeneralModelEditView

  .slide.slide12
    .content
      h1 Putting it all together
      .personEdit
      .personView

